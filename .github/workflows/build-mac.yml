name: Build Mac App (Nuitka)

on:
  workflow_dispatch:
  workflow_call: {}   # <- makes this workflow reusable


jobs:
  build-macos:
    runs-on: macos-latest
    env:
      TK_SILENCE_DEPRECATION: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo layout (debug)
        run: |
          pwd
          git ls-files | sed 's/^/  /'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"   # no pip cache

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          # imageio enables PNG -> .icns conversion for --macos-app-icon
          pip install "nuitka>=2.4" pillow numpy scipy pyserial matplotlib imageio

      - name: Locate project + verify tkinter
        id: locate
        shell: bash
        run: |
          set -eo pipefail

          # Find ARIana.py anywhere in the repo (first match)
          APP_MAIN_REL="$(git ls-files | grep -E '(^|.*/)(ARIana\.py)$' | head -n1 || true)"
          if [[ -z "$APP_MAIN_REL" ]]; then
            echo "ERROR: Could not find ARIana.py anywhere in repo."
            exit 1
          fi

          # Absolute paths (safe with spaces)
          APP_MAIN_ABS="$(python -c 'import os,sys; print(os.path.realpath(sys.argv[1]))' "$APP_MAIN_REL")"
          APP_DIR_ABS="$(python -c 'import os,sys; print(os.path.dirname(os.path.realpath(sys.argv[1])))' "$APP_MAIN_REL")"

          # Prefer Patients next to script; else repo root; else empty
          if [[ -d "$APP_DIR_ABS/Patients" ]]; then
            DATA_DIR_ABS="$APP_DIR_ABS/Patients"
          elif [[ -d "$GITHUB_WORKSPACE/Patients" ]]; then
            DATA_DIR_ABS="$GITHUB_WORKSPACE/Patients"
          else
            DATA_DIR_ABS=""
          fi

          # Prefer icon next to script; else repo root; else empty
          if [[ -f "$APP_DIR_ABS/ARIana_logo.png" ]]; then
            ICON_ABS="$APP_DIR_ABS/ARIana_logo.png"
          elif [[ -f "$GITHUB_WORKSPACE/ARIana_logo.png" ]]; then
            ICON_ABS="$GITHUB_WORKSPACE/ARIana_logo.png"
          else
            ICON_ABS=""
          fi

          echo "APP_MAIN_ABS=$APP_MAIN_ABS" >> "$GITHUB_OUTPUT"
          echo "APP_DIR_ABS=$APP_DIR_ABS"   >> "$GITHUB_OUTPUT"
          echo "DATA_DIR_ABS=$DATA_DIR_ABS" >> "$GITHUB_OUTPUT"
          echo "ICON_ABS=$ICON_ABS"         >> "$GITHUB_OUTPUT"

          # Verify tkinter import works
          python - << 'PY'
          import tkinter as tk
          print("tkinter OK")
          PY

      - name: Build app bundle with Nuitka
        shell: bash
        run: |
          set -eo pipefail

          APP_MAIN_ABS="${{ steps.locate.outputs.APP_MAIN_ABS }}"
          APP_DIR_ABS="${{ steps.locate.outputs.APP_DIR_ABS }}"
          DATA_DIR_ABS="${{ steps.locate.outputs.DATA_DIR_ABS }}"
          ICON_ABS="${{ steps.locate.outputs.ICON_ABS }}"

          OUT_DIR="$APP_DIR_ABS/build_macos"

          # === Exactly your flags, with absolute paths and quoting ===
          NUITKA_FLAGS=(
            --standalone
            --macos-create-app-bundle
            --macos-app-name=ARIana
            --include-module=tkinter
            --include-module=PIL
            --include-module=matplotlib
            --include-module=numpy
            --include-module=scipy
            --include-module=serial
            --enable-plugin=tk-inter
            "--output-dir=$OUT_DIR"
            "--macos-sign-identity=-"
          )

          if [[ -n "$DATA_DIR_ABS" ]]; then
            NUITKA_FLAGS+=( "--include-data-dir=$DATA_DIR_ABS=Patients" )
          else
            echo "NOTE: Patients/ not found; skipping include."
          fi

          if [[ -n "$ICON_ABS" ]]; then
            NUITKA_FLAGS+=( "--include-data-file=$ICON_ABS=ARIana_logo.png" )
            NUITKA_FLAGS+=( "--macos-app-icon=$ICON_ABS" )
          else
            echo "NOTE: ARIana_logo.png not found; skipping icon."
          fi

          echo "Nuitka flags:"
          printf '  %q\n' "${NUITKA_FLAGS[@]}"

          python3 -m nuitka "${NUITKA_FLAGS[@]}" "$APP_MAIN_ABS"

      - name: Create DMG
        shell: bash
        run: |
          set -eo pipefail
          APP_DIR_ABS="${{ steps.locate.outputs.APP_DIR_ABS }}"
          OUT_DIR="$APP_DIR_ABS/build_macos"
          APP_PATH="$OUT_DIR/ARIana.app"
          if [[ ! -d "$APP_PATH" ]]; then
            echo "ERROR: Expected app bundle not found at: $APP_PATH"
            ls -la "$OUT_DIR" || true
            exit 1
          fi
          hdiutil create -volname "ARIana" -srcfolder "$APP_PATH" -ov -format UDZO "$APP_DIR_ABS/ARIana.dmg"
          ls -lh "$APP_DIR_ABS/ARIana.dmg"

      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: ARIana-macOS-DMG
          path: ${{ steps.locate.outputs.APP_DIR_ABS }}/ARIana.dmg
          if-no-files-found: error
