name: Build Linux App (Nuitka)

on:
  workflow_dispatch:
  workflow_call: {}    # let other workflows call it


jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo layout (debug)
        run: |
          pwd
          git ls-files | sed 's/^/  /'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"   # no pip cache

      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-tk tk tcl \
            patchelf build-essential

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install "nuitka>=2.4" pillow numpy scipy pyserial matplotlib imageio

      - name: Locate project + verify tkinter
        id: locate
        shell: bash
        run: |
          set -eo pipefail

          # Find ARIana.py anywhere in the repo (first match)
          APP_MAIN_REL="$(git ls-files | grep -E '(^|.*/)(ARIana\.py)$' | head -n1 || true)"
          if [[ -z "$APP_MAIN_REL" ]]; then
            echo "ERROR: Could not find ARIana.py anywhere in repo."
            exit 1
          fi

          # Absolute paths (safe with spaces) â€” use python -c, not here-doc with argv
          APP_MAIN_ABS="$(python -c 'import os,sys; print(os.path.realpath(sys.argv[1]))' "$APP_MAIN_REL")"
          APP_DIR_ABS="$(python -c 'import os,sys; print(os.path.dirname(os.path.realpath(sys.argv[1])))' "$APP_MAIN_REL")"

          # Prefer Patients next to script; else repo root; else empty
          if [[ -d "$APP_DIR_ABS/Patients" ]]; then
            DATA_DIR_ABS="$APP_DIR_ABS/Patients"
          elif [[ -d "$GITHUB_WORKSPACE/Patients" ]]; then
            DATA_DIR_ABS="$GITHUB_WORKSPACE/Patients"
          else
            DATA_DIR_ABS=""
          fi

          # Prefer icon next to script; else repo root; else empty
          if [[ -f "$APP_DIR_ABS/ARIana_logo.png" ]]; then
            ICON_ABS="$APP_DIR_ABS/ARIana_logo.png"
          elif [[ -f "$GITHUB_WORKSPACE/ARIana_logo.png" ]]; then
            ICON_ABS="$GITHUB_WORKSPACE/ARIana_logo.png"
          else
            ICON_ABS=""
          fi

          echo "APP_MAIN_ABS=$APP_MAIN_ABS" >> "$GITHUB_OUTPUT"
          echo "APP_DIR_ABS=$APP_DIR_ABS"   >> "$GITHUB_OUTPUT"
          echo "DATA_DIR_ABS=$DATA_DIR_ABS" >> "$GITHUB_OUTPUT"
          echo "ICON_ABS=$ICON_ABS"         >> "$GITHUB_OUTPUT"

          # Verify tkinter import works
          python - << 'PY'
          import tkinter as tk
          print("tkinter OK")
          PY

      - name: Build (Linux, Nuitka)
        shell: bash
        run: |
          set -eo pipefail

          APP_MAIN_ABS="${{ steps.locate.outputs.APP_MAIN_ABS }}"
          DATA_DIR_ABS="${{ steps.locate.outputs.DATA_DIR_ABS }}"
          ICON_ABS="${{ steps.locate.outputs.ICON_ABS }}"

          OUT_DIR="$GITHUB_WORKSPACE/build_linux"

          NUITKA_FLAGS=(
            --standalone
            --enable-plugin=tk-inter
            --include-module=tkinter
            --include-module=PIL
            --include-module=matplotlib
            --include-module=numpy
            --include-module=scipy
            --include-module=serial
            "--include-data-dir=${{ steps.locate.outputs.APP_DIR_ABS }}/Patients=Patients"
            "--include-data-file=${{ steps.locate.outputs.APP_DIR_ABS }}/preop_checklist.txt=preop_checklist.txt"
            "--output-dir=$OUT_DIR"
          )

          if [[ -n "$ICON_ABS" ]]; then
            NUITKA_FLAGS+=( "--include-data-file=$ICON_ABS=ARIana_logo.png" )
          else
            echo "NOTE: ARIana_logo.png not found; skipping include."
          fi

          echo "Nuitka flags:"
          printf '  %q\n' "${NUITKA_FLAGS[@]}"

          python3 -m nuitka "${NUITKA_FLAGS[@]}" "$APP_MAIN_ABS"

      - name: Package artifact (.tar.gz)
        shell: bash
        run: |
          set -eo pipefail
          OUT_DIR="$GITHUB_WORKSPACE/build_linux"
          if [[ ! -d "$OUT_DIR" ]]; then
            echo "ERROR: $OUT_DIR not found; build likely failed."
            ls -la "$GITHUB_WORKSPACE" || true
            exit 1
          fi
          tar -czvf "$GITHUB_WORKSPACE/ARIana-linux.tar.gz" -C "$GITHUB_WORKSPACE/build_linux" "$(basename "$APP_MAIN_ABS" .py).dist"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ARIana-linux
          path: ARIana-linux.tar.gz
          if-no-files-found: error
